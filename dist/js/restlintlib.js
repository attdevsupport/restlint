"use strict";var pData={general:{},httpmethods:[],parameters:[],paths:[],statuscodes:[],errors:[]},errors={general:[],httpmethods:[],parameters:[],paths:[],statuscodes:[],errors:[]},categories=[{title:"summary",tooltip:"Summary of Issues across all categories",columns:["Category","# of Infos","# of Warnings","# of Errors","Total"]},{title:"general",tooltip:"General or top level issues with the design",columns:["#","Issue","Message"]},{title:"http-methods",tooltip:"Issues related to HTTP methods (verbs)",columns:["#","Issue","Message"]},{title:"paths",tooltip:"Issues related to the URI paths or resources",columns:["#","Issue","Message"]},{title:"parameters",tooltip:"Issues related to the parameters and data definitions",columns:["#","Issue","Message"]},{title:"status-codes",tooltip:"Issues related to HTTP status code usage",columns:["#","Issue","Message"]},{title:"errors",tooltip:"Issues related to exceptions returned by service",columns:["#","Issue","Message"]}],legends=[{title:"info",tooltip:"User should research issue",description:"There is not enough information to make a solid determination, or is just a suggestion. But user should investigate further to determine if the suggestion makes sense."},{title:"warning",tooltip:"User should investigate further to determine if it is an issue",description:'There\'s a high probability that the issue is a violation, but further investigation is needed. Check with the <a href="https://tools.ietf.org/html/rfc7230" target="_blank"> HTTP standards (RFC 7230-7235)</a> and <a href="http://tss.att.com/document/R113140.pdf" target="_blank">AT&T RESTful Standards</a>.'},{title:"error",tooltip:"User must take corrective action",description:'The issue is a violation of a standard (HTTP, AT&T, etc) or best practice. This issue <em>must</em> be fixed. Check with the <a href="https://tools.ietf.org/html/rfc7230" target="_blank"> HTTP standards (RFC 7230-7235)</a> and <a href="http://tss.att.com/document/R113140.pdf" target="_blank">AT&T RESTful Standards</a>.'}],allowedHttpMethods=["POST","PUT","GET","DELETE"],allowedHostsExt=["lgw.att.com","api.att.com"],jsdata="",naming="lowerCamel",isExternal=!0,statuscodes={get:{success:"200|204|206",mandatory:["400","401","403","404","405","406","410","429","431","500","503"],optional:["408","414","416","426","451","501","502","504"]},post:{success:"200|201|202|204",mandatory:["400","401","403","404","405","406","410","411","413","415","429","431","500","503"],optional:["408","409","412","417","426","428","451","501","502","504"]},put:{success:"200|201|202|204",mandatory:["400","401","403","404","405","406","409","410","411","413","415","429","431","500","503"],optional:["408","412","417","426","428","451","501","502","504"]},delete:{success:"200|202|204",mandatory:["400","401","403","404","405","406","409","410","415","429","431","500","503"],optional:["408","412","414","417","426","451","501","502","504"]}},errordetails={STATUSCODES_GET_MAN:{short:"Missing mandatory HTTP status codes: $1",long:"The HTTP method GET should have the following status codes possible, and should be accounted for in the design of the API: "}},getCategories=function(){return categories},capitalize=function(e){var t=[];return e.split("-").forEach(function(e){t.push(e.charAt(0).toUpperCase()+e.substr(1))}),t.join(" ")},xcnt=0,getDefinitions=function(s){console.log("NUMBER OF DEF: "+xcnt+" "+Object.keys(s).length),xcnt++,Object.keys(s).forEach(function(e,t){var r=[];s[e].hasOwnProperty("properties")?r=getProps("",s[e].properties):s[e].hasOwnProperty("type")&&r.push(e+":"+s[e].type),pData.parameters.push(createDefinitionObj(e,r))})},getProps=function(o,n){var h=[];return Object.keys(n).forEach(function(e,t){var r="object",s=[];if(o&&s.push(o),s.push(e),n[e].type&&(r=n[e].type),n[e].hasOwnProperty("items"))if(n[e].items.hasOwnProperty("$ref")){var a=n[e].items.$ref;h.push(s.join(".")+":"+a)}else n[e].items.hasOwnProperty("type")&&h.push(s.join(".")+":"+n[e].items.type);else if(n[e].hasOwnProperty("$ref")){a=n[e].$ref;h.push(s.join(".")+":"+a)}else n[e].hasOwnProperty("properties")?getProps(s.join("."),n[e].properties).forEach(function(e,t){s.push(e),h.push(e)}):n[e].hasOwnProperty("type")?h.push(s.join(".")+":"+n[e].type):h.push(s.join(".")+":"+r)}),h},getCsvFileType=function(e){var t=2+(e.lastIndexOf("-")-1>>>0),r=1+(e.lastIndexOf(".")-1>>>0);return e.slice(t,r)},createErrorObj=function(e,t,r){var s={};return s.name=e,s.msg=r,s.level=t,s},createStatusObj=function(e,t,r){var s={};return s.path=e,s.method=t,s.statuses=r,s},createDefinitionObj=function(e,t){var r={};return r.definition=e,r.params=t,r},createMethodObj=function(e,t,r,s,a){var o={};return o.path=e,o.method=t,o.produces=r,o.consumes=s,o.paramlocation=a,o},checkBasePath=function(){var e=[],t="";e.push(pData.general.basePath),checkPathStructure("basePath",e),(pData.general.basePath.match(/^(\/.*){1,3}\/v[0-9]/)||[]).length||(t=(pData.general.basePath.match(/v[0-9]/g)||[]).length?"basePath should be of the form {/routing}*{/APIName}/{version}{/resourcePath}, where routing can contain 0-2 path segments.":"basePath should have version string (v[0-9], e.g. v1)",errors.paths.push(createErrorObj(pData.general.basePath,"error",t))),(pData.general.basePath.match(/(\/)?flow\//)||[]).length&&(t="basePath should have 'flow' as a path segment <em>only</em> if the API is Flow based and is being exposed through BlackFlag",errors.paths.push(createErrorObj(pData.general.basePath,"warning",t)))},checkDefinitions=function(){console.log("********** IN CHECK DEF");var i=[];console.log("########PARAMS NUMBER: "+pData.parameters.length),pData.parameters.forEach(function(n,e){var h=[];n.params.forEach(function(e,t){var r=e.split(":"),s=r[0],a=r[1];a.match(/^#\//)&&i.indexOf(a)<0&&i.push(a);var o=[];s.split(".").forEach(function(e){if(!(0<=h.indexOf(e))){h.push(e);var t=checkCase(e);return Object.keys(t).length?(t.name=n.definition+": "+e,void o.push(t)):void 0}console.log("CHECKED: "+e)}),o.forEach(function(e){errors.parameters.push(createErrorObj(e.name,e.level,e.msg))})})})},checkResources=function(e){e.forEach(function(e,t){var r=e.replace(/^[/]+|[/]$/,"").split("/"),s=r[r.length-1],a=r[r.length-2],o="";s.match(/^{.*}$/)&&"s"!=a[a.length-1]&&(o="collections ("+a+") must be plural",errors.paths.push(createErrorObj(e,"error",o))),s.match(/create|make|delete|update|get|del|remove/i)&&(o="resource must be a noun",errors.paths.push(createErrorObj(e,"error",o)));var n=checkCase(s);Object.keys(n).length&&errors.paths.push(createErrorObj(e,n.level,n.msg))})},checkCase=function(e){var t={};return"lowerCamel"===naming?/^[A-Z_-]+|[_-]+/.test(e)&&(t.msg="names must be lowerCamel case",t.level="error"):"UpperCamel"===naming?e.match(/^[a-z_-]+|[_-]+/)&&(t.msg="names must be UpperCamel case",t.level="error"):"snake"===naming&&0==e.match(/[_]/)&&(t.msg="names must be in snake_case",t.level="warning"),t},checkPathStructure=function(a,e){e.forEach(function(e,t){var r="",s=e.replace(/\/|{|}/g,"");e.match(/\/\//)&&(r=a+" can not have double forward slash",errors.paths.push(createErrorObj(e,"error",r))),s!=encodeURIComponent(s)&&(r=a+" can not have reserved characters",errors.paths.push(createErrorObj(e,"error",r))),(e.match(/\//g)||[]).length||(r=a+" should have at least one forward slash",errors.paths.push(createErrorObj(e,"warning",r))),"/"!=e[0]&&(r=a+" should have leading forward slash",errors.paths.push(createErrorObj(e,"error",r))),"/"===e[e.length-1]&&(r=a+" should not have forward slash at end of path",errors.paths.push(createErrorObj(e,"warning",r)))})},checkStatusCodes=function(i){i.forEach(function(e,r){var t="",s="",a={},o=i[r].method.toLowerCase();"post"===o&&i[r].statuses.indexOf("201")<0&&(t="POST for <u>creating</u> resources should return HTTP status code of 201",t+=" (only show: "+i[r].statuses.join(",")+")",s=i[r].method.toUpperCase()+" "+i[r].path,a=createErrorObj(s,"warning",t),errors.statuscodes.push(a));var n=[];void 0!==statuscodes[o]&&statuscodes[o].mandatory.forEach(function(e,t){i[r].statuses.indexOf(e)&&n.push(e)}),0<n.length&&(t="missing mandatory HTTP status codes: "+n.join(", "),s=i[r].method.toUpperCase()+" "+i[r].path,a=createErrorObj(s,"error",t),errors.statuscodes.push(a));var h=[];void 0!==statuscodes[o]&&statuscodes[o].optional.forEach(function(e,t){i[r].statuses.indexOf(e)&&h.push(e)}),0<h.length&&(t="missing optional HTTP status codes (verify if codes are needed): "+h.join(", "),s=i[r].method.toUpperCase()+" "+i[r].path,a=createErrorObj(s,"warning",t),errors.statuscodes.push(a))})},checkMethods=function(e){e.forEach(function(e,t){var r="",s={},a=e.method.toUpperCase();allowedHttpMethods.indexOf(a)<0&&(r="The only HTTP methods allowed are: "+allowedHttpMethods.join(","),s=createErrorObj(a+" "+e.path,"error",r),errors.httpmethods.push(s)),a.match(/GET|DELETE/)&&0<e.consumes.length&&(r=a+" HTTP methods must only <em>produce</em> (response body), not <em>consume</em> (request body)",s=createErrorObj(a+" "+e.path,"error",r),errors.httpmethods.push(s)),"GET"===a&&0===e.produces.length&&(r="GET HTTP methods must <em>produce</em> (response body)",s=createErrorObj(a+" "+e.path,"error",r),errors.httpmethods.push(s)),a.match(/POST|PUT/)&&0===e.consumes.length&&(r=a+" HTTP methods must <em>consume</em> (request body)",s=createErrorObj(a+" "+e.path,"error",r),errors.httpmethods.push(s)),a.match(/POST|PUT/)&&0<=e.paramlocation.indexOf("query")&&(r=a+" HTTP methods must not have query parameters.",s=createErrorObj(a+" "+e.path,"error",r),errors.httpmethods.push(s)),a.match(/GET|DELETE/)&&0<=e.paramlocation.indexOf("body")&&(r=a+" HTTP methods must not have request payloads (in=body).",s=createErrorObj(a+" "+e.path,"error",r),errors.httpmethods.push(s)),(0!=e.produces.length&&e.produces.indexOf("application/json")<0||1<e.produces.length)&&(r="Textual response payloads (produces) should only be in JSON format.",s=createErrorObj(a+" "+e.path,"warning",r),errors.httpmethods.push(s)),(0!=e.consumes.length&&e.consumes.indexOf("application/json")<0||1<e.consumes.length)&&(r="Textual request payloads (consumes) should only be in JSON format.",s=createErrorObj(a+" "+e.path,"warning",r),errors.httpmethods.push(s))})},checkGeneral=function(){var e="",t={};(1!=pData.general.schemes.length||pData.general.schemes.indexOf("https")<0)&&(e="schemes must only have <em>https</em>",t=createErrorObj(pData.general.schemes.join(","),"error",e),errors.general.push(t)),isExternal&&allowedHostsExt.indexOf(pData.general.host)<0&&(e="host names for externally exposed APIs must be either <em>lgw.att.com</em> or <em>api.att.com</em>",t=createErrorObj(pData.general.host,"error",e),errors.general.push(t)),"2.0"===pData.general.version&&(e="Consider upgrading to the newer <a href='https://www.openapis.org/' target='_blank'>OpenAPI</a> spec. The Swagger spec will be outdated, and has less features. You can convert your Swagger spec into OpenAPI online (e.g. <a href='https://github.com/mermade/swagger2openapi' target='_blank'>swagger2openapi</a>).",errors.general.push(createErrorObj("Version = "+pData.general.version,"info",e)))},getErrors=function(e){return e=e.replace("-",""),errors[e]},getData=function(e){return pData[e]},clearData=function(){Object.keys(pData).forEach(function(e,t){Array.isArray(pData[e])?pData[e].length=0:pData[e]={}}),Object.keys(errors).forEach(function(e,t){errors[e].length=0}),jsdata=""},loadCsv=function(e,t){var r=t.split("\n"),s=r[0].split(",");r.splice(1).forEach(function(e){e.split(",").forEach(function(e,t){console.log(s[t]+" = "+e)})})},loadJson=function(e){var h=JSON.parse(e);pData.general.basePath=h.basePath,pData.general.host=h.host,pData.general.schemes=h.schemes,h.swagger?pData.general.version=h.swagger:pData.general.version=h.openapi,Object.keys(h.paths).forEach(function(n,e){pData.paths[e]=n,Object.keys(h.paths[n]).forEach(function(e,t){var r=[];Object.keys(h.paths[n][e].responses).forEach(function(e,t){r.push(e)}),pData.statuscodes.push(createStatusObj(n,e,r));var s=[];h.paths[n][e].hasOwnProperty("produces")&&(s=h.paths[n][e].produces);var a=[];h.paths[n][e].hasOwnProperty("consumes")&&(a=h.paths[n][e].consumes);var o=[];h.paths[n][e].parameters.forEach(function(e,t){e.hasOwnProperty("in")&&o.push(e.in)}),pData.httpmethods.push(createMethodObj(n,e,s,a,o))})}),getDefinitions(h.definitions)},Category=function(e,t){var r=this;r.name=ko.observable(e.title),r.title=capitalize(e.title),r.columns=e.columns,r.tooltip=e.tooltip,r.index=t,r.ref="#"+e.title,r.tablename=e.title+"-table",r.tablefooter=e.title+"-table-footer",r.tablebody=e.title+"-table-body",r.issueid=e.title+"-issues"};function appViewModel(){this.categoryList=ko.observableArray([]);for(var e=0,t=categories.length;e<t;e++){var r=new Category(categories[e],e);this.categoryList.push(r)}}var appView={viewModel:new appViewModel};ko.applyBindings(appView.viewModel);