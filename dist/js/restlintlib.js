"use strict";var pData={general:{},httpmethods:[],parameters:[],paths:[],statuscodes:[],errors:[]},errors={general:[],httpmethods:[],parameters:[],paths:[],statuscodes:[],errors:[]},categories=["summary","general","http-methods","paths","parameters","status-codes","errors"],allowedHttpMethods=["POST","PUT","GET","DELETE"],allowedHostsExt=["lgw.att.com","api.att.com"],jsdata="",naming="lowerCamel",isExternal=!0,statuscodes={get:{success:"200|204|206",mandatory:["400","401","403","404","405","406","410","429","431","500","503"],optional:["408","414","416","426","451","501","502","504"]},post:{success:"200|201|202|204",mandatory:["400","401","403","404","405","406","410","411","413","415","429","431","500","503"],optional:["408","409","412","417","426","428","451","501","502","504"]},put:{success:"200|201|202|204",mandatory:["400","401","403","404","405","406","409","410","411","413","415","429","431","500","503"],optional:["408","412","417","426","428","451","501","502","504"]},delete:{success:"200|202|204",mandatory:["400","401","403","404","405","406","409","410","415","429","431","500","503"],optional:["408","412","414","417","426","451","501","502","504"]}},errordetails={STATUSCODES_GET_MAN:{short:"Missing mandatory HTTP status codes: $1",long:"The HTTP method GET should have the following status codes possible, and should be accounted for in the design of the API: "}},getCategories=function(){return categories},capitalize=function(e){var r=[];return e.split("-").forEach(function(e){r.push(e.charAt(0).toUpperCase()+e.substr(1))}),r.join(" ")},xcnt=0,getDefinitions=function(a){console.log("NUMBER OF DEF: "+xcnt+" "+Object.keys(a).length),xcnt++,Object.keys(a).forEach(function(e,r){var t=[];a[e].hasOwnProperty("properties")?t=getProps("",a[e].properties):a[e].hasOwnProperty("type")&&t.push(e+":"+a[e].type),pData.parameters.push(createDefinitionObj(e,t))})},getProps=function(o,n){var h=[];return Object.keys(n).forEach(function(e,r){var t="object",a=[];if(o&&a.push(o),a.push(e),n[e].type&&(t=n[e].type),n[e].hasOwnProperty("items"))if(n[e].items.hasOwnProperty("$ref")){var s=n[e].items.$ref;h.push(a.join(".")+":"+s)}else n[e].items.hasOwnProperty("type")&&h.push(a.join(".")+":"+n[e].items.type);else if(n[e].hasOwnProperty("$ref")){s=n[e].$ref;h.push(a.join(".")+":"+s)}else n[e].hasOwnProperty("properties")?getProps(a.join("."),n[e].properties).forEach(function(e,r){a.push(e),h.push(e)}):n[e].hasOwnProperty("type")?h.push(a.join(".")+":"+n[e].type):h.push(a.join(".")+":"+t)}),h},getCsvFileType=function(e){var r=2+(e.lastIndexOf("-")-1>>>0),t=1+(e.lastIndexOf(".")-1>>>0);return e.slice(r,t)},createErrorObj=function(e,r,t){var a={};return a.name=e,a.msg=t,a.level=r,a},createStatusObj=function(e,r,t){var a={};return a.path=e,a.method=r,a.statuses=t,a},createDefinitionObj=function(e,r){var t={};return t.definition=e,t.params=r,t},createMethodObj=function(e,r,t,a,s){var o={};return o.path=e,o.method=r,o.produces=t,o.consumes=a,o.paramlocation=s,o},checkBasePath=function(){var e=[],r="";e.push(pData.general.basePath),checkPathStructure("basePath",e),(pData.general.basePath.match(/^(\/.*){1,3}\/v[0-9]/)||[]).length||(r=(pData.general.basePath.match(/v[0-9]/g)||[]).length?"basePath should be of the form {/routing}*{/APIName}/{version}{/resourcePath}, where routing can contain 0-2 path segments.":"basePath should have version string (v[0-9], e.g. v1)",errors.paths.push(createErrorObj(pData.general.basePath,"error",r))),(pData.general.basePath.match(/(\/)?flow\//)||[]).length&&(r="basePath should have 'flow' as a path segment <em>only</em> if the API is Flow based and is being exposed through BlackFlag",errors.paths.push(createErrorObj(pData.general.basePath,"warning",r)))},checkDefinitions=function(){console.log("********** IN CHECK DEF");var p=[];console.log("########PARAMS NUMBER: "+pData.parameters.length),pData.parameters.forEach(function(n,e){var h=[];n.params.forEach(function(e,r){var t=e.split(":"),a=t[0],s=t[1];s.match(/^#\//)&&p.indexOf(s)<0&&p.push(s);var o=[];a.split(".").forEach(function(e){if(!(0<=h.indexOf(e))){h.push(e);var r=checkCase(e);return Object.keys(r).length?(r.name=n.definition+": "+e,void o.push(r)):void 0}console.log("CHECKED: "+e)}),o.forEach(function(e){errors.parameters.push(createErrorObj(e.name,e.level,e.msg))})})})},checkResources=function(e){e.forEach(function(e,r){var t=e.replace(/^[/]+|[/]$/,"").split("/"),a=t[t.length-1],s=t[t.length-2],o="";a.match(/^{.*}$/)&&"s"!=s[s.length-1]&&(o="collections ("+s+") must be plural",errors.paths.push(createErrorObj(e,"error",o))),a.match(/create|make|delete|update|get|del|remove/i)&&(o="resource must be a noun",errors.paths.push(createErrorObj(e,"error",o)));var n=checkCase(a);Object.keys(n).length&&errors.paths.push(createErrorObj(e,n.level,n.msg))})},checkCase=function(e){var r={};return"lowerCamel"===naming?/^[A-Z_-]+|[_-]+/.test(e)&&(r.msg="names must be lowerCamel case",r.level="error"):"UpperCamel"===naming?e.match(/^[a-z_-]+|[_-]+/)&&(r.msg="names must be UpperCamel case",r.level="error"):"snake"===naming&&0==e.match(/[_]/)&&(r.msg="names must be in snake_case",r.level="warning"),r},checkPathStructure=function(s,e){e.forEach(function(e,r){var t="",a=e.replace(/\/|{|}/g,"");e.match(/\/\//)&&(t=s+" can not have double forward slash",errors.paths.push(createErrorObj(e,"error",t))),a!=encodeURIComponent(a)&&(t=s+" can not have reserved characters",errors.paths.push(createErrorObj(e,"error",t))),(e.match(/\//g)||[]).length||(t=s+" should have at least one forward slash",errors.paths.push(createErrorObj(e,"warning",t))),"/"!=e[0]&&(t=s+" should have leading forward slash",errors.paths.push(createErrorObj(e,"error",t))),"/"===e[e.length-1]&&(t=s+" should not have forward slash at end of path",errors.paths.push(createErrorObj(e,"warning",t)))})},checkStatusCodes=function(p){p.forEach(function(e,t){var r="",a="",s={},o=p[t].method.toLowerCase();"post"===o&&p[t].statuses.indexOf("201")<0&&(r="POST for <u>creating</u> resources should return HTTP status code of 201",r+=" (only show: "+p[t].statuses.join(",")+")",a=p[t].method.toUpperCase()+" "+p[t].path,s=createErrorObj(a,"warning",r),errors.statuscodes.push(s));var n=[];void 0!==statuscodes[o]&&statuscodes[o].mandatory.forEach(function(e,r){p[t].statuses.indexOf(e)&&n.push(e)}),0<n.length&&(r="missing mandatory HTTP status codes: "+n.join(", "),a=p[t].method.toUpperCase()+" "+p[t].path,s=createErrorObj(a,"error",r),errors.statuscodes.push(s));var h=[];void 0!==statuscodes[o]&&statuscodes[o].optional.forEach(function(e,r){p[t].statuses.indexOf(e)&&h.push(e)}),0<h.length&&(r="missing optional HTTP status codes (verify if codes are needed): "+h.join(", "),a=p[t].method.toUpperCase()+" "+p[t].path,s=createErrorObj(a,"warning",r),errors.statuscodes.push(s))})},checkMethods=function(e){e.forEach(function(e,r){var t="",a={},s=e.method.toUpperCase();allowedHttpMethods.indexOf(s)<0&&(t="The only HTTP methods allowed are: "+allowedHttpMethods.join(","),a=createErrorObj(s+" "+e.path,"error",t),errors.httpmethods.push(a)),s.match(/GET|DELETE/)&&0<e.consumes.length&&(t=s+" HTTP methods must only <em>produce</em> (response body), not <em>consume</em> (request body)",a=createErrorObj(s+" "+e.path,"error",t),errors.httpmethods.push(a)),"GET"===s&&0===e.produces.length&&(t="GET HTTP methods must <em>produce</em> (response body)",a=createErrorObj(s+" "+e.path,"error",t),errors.httpmethods.push(a)),s.match(/POST|PUT/)&&0===e.consumes.length&&(t=s+" HTTP methods must <em>consume</em> (request body)",a=createErrorObj(s+" "+e.path,"error",t),errors.httpmethods.push(a)),s.match(/POST|PUT/)&&0<=e.paramlocation.indexOf("query")&&(t=s+" HTTP methods must not have query parameters.",a=createErrorObj(s+" "+e.path,"error",t),errors.httpmethods.push(a)),s.match(/GET|DELETE/)&&0<=e.paramlocation.indexOf("body")&&(t=s+" HTTP methods must not have request payloads (in=body).",a=createErrorObj(s+" "+e.path,"error",t),errors.httpmethods.push(a)),(0!=e.produces.length&&e.produces.indexOf("application/json")<0||1<e.produces.length)&&(t="Textual response payloads (produces) should only be in JSON format.",a=createErrorObj(s+" "+e.path,"warning",t),errors.httpmethods.push(a)),(0!=e.consumes.length&&e.consumes.indexOf("application/json")<0||1<e.consumes.length)&&(t="Textual request payloads (consumes) should only be in JSON format.",a=createErrorObj(s+" "+e.path,"warning",t),errors.httpmethods.push(a))})},checkGeneral=function(){var e="",r={};(1!=pData.general.schemes.length||pData.general.schemes.indexOf("https")<0)&&(e="schemes must only have <em>https</em>",r=createErrorObj(pData.general.schemes.join(","),"error",e),errors.general.push(r)),isExternal&&allowedHostsExt.indexOf(pData.general.host)<0&&(e="host names for externally exposed APIs must be either <em>lgw.att.com</em> or <em>api.att.com</em>",r=createErrorObj(pData.general.host,"error",e),errors.general.push(r)),"2.0"===pData.general.version&&(e="Consider upgrading to the newer <a href='https://www.openapis.org/' target='_blank'>OpenAPI</a> spec. The Swagger spec will be outdated, and has less features. You can convert your Swagger spec into OpenAPI online (e.g. <a href='https://github.com/mermade/swagger2openapi' target='_blank'>swagger2openapi</a>).",errors.general.push(createErrorObj("Version = "+pData.general.version,"info",e)))},getErrors=function(e){return e=e.replace("-",""),errors[e]},getData=function(e){return pData[e]},clearData=function(){Object.keys(pData).forEach(function(e,r){Array.isArray(pData[e])?pData[e].length=0:pData[e]={}}),Object.keys(errors).forEach(function(e,r){errors[e].length=0}),jsdata=""},loadCsv=function(e,r){var t=r.split("\n"),a=t[0].split(",");t.splice(1).forEach(function(e){e.split(",").forEach(function(e,r){console.log(a[r]+" = "+e)})})},loadJson=function(e){var h=JSON.parse(e);pData.general.basePath=h.basePath,pData.general.host=h.host,pData.general.schemes=h.schemes,h.swagger?pData.general.version=h.swagger:pData.general.version=h.openapi,Object.keys(h.paths).forEach(function(n,e){pData.paths[e]=n,Object.keys(h.paths[n]).forEach(function(e,r){var t=[];Object.keys(h.paths[n][e].responses).forEach(function(e,r){t.push(e)}),pData.statuscodes.push(createStatusObj(n,e,t));var a=[];h.paths[n][e].hasOwnProperty("produces")&&(a=h.paths[n][e].produces);var s=[];h.paths[n][e].hasOwnProperty("consumes")&&(s=h.paths[n][e].consumes);var o=[];h.paths[n][e].parameters.forEach(function(e,r){e.hasOwnProperty("in")&&o.push(e.in)}),pData.httpmethods.push(createMethodObj(n,e,a,s,o))})}),getDefinitions(h.definitions)};